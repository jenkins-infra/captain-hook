---
name: goreleaser

on:
  push:
    branches:
      - main

jobs:
  goreleaser:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16

      - name: Install Helm
        uses: azure/setup-helm@v1
        with:
          version: v3.5.2

      - name: Prepare
        id: prep
        run: |
          DOCKER_IMAGE=jenkinsciinfra/captain-hook
          VERSION=latest
          GORELEASER_ARGS="build --rm-dist --snapshot"
          RELEASE_CHART=false

          if [[ $GITHUB_REF == refs/tags/* ]]; then
            # release
            VERSION=${GITHUB_REF#refs/tags/}
            GORELEASER_ARGS="release --rm-dist"
            RELEASE_CHART=true
          elif [[ $GITHUB_REF == refs/heads/* ]]; then
            # branch
            VERSION=$(echo ${GITHUB_REF#refs/heads/} | sed -r 's#/+#-#g')
            if [[ $VERSION == 'main' ]]; then
              VERSION=latest
            fi
          elif [[ $GITHUB_REF == refs/pull/* ]]; then
            # pr
            VERSION=pr-${{ github.event.number }}
          fi

          TAGS="${DOCKER_IMAGE}:${VERSION}"

          echo ::set-output name=release_chart::${RELEASE_CHART}
          echo ::set-output name=goreleaser_args::${GORELEASER_ARGS}
          echo ::set-output name=image::${DOCKER_IMAGE}
          echo ::set-output name=version::${VERSION}
          echo ::set-output name=tags::${TAGS}
          echo ::set-output name=created::$(date -u +'%Y-%m-%dT%H:%M:%SZ')

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v2.4.1
        with:
          version: latest
          args: ${{ steps.prep.outputs.goreleaser_args }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ steps.prep.outputs.tags }}
          platforms: linux/amd64,linux/arm64,linux/s390x,linux/ppc64le
          labels: |
            org.opencontainers.image.source=${{ github.event.repository.html_url }}
            org.opencontainers.image.url=${{ github.event.repository.html_url }}
            org.opencontainers.image.created=${{ steps.prep.outputs.created }}
            org.opencontainers.image.revision=${{ github.sha }}

      - name: Configure Git
        if: ${{ steps.prep.outputs.release_chart == 'true' }}
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Update appVersion in Chart.yaml
        uses: mikefarah/yq@v4.6.0
        if: ${{ steps.prep.outputs.release_chart == 'true' }}
        with:
          cmd: yq eval '.appVersion = "${{ steps.prep.outputs.version }}"' -i charts/captain-hook/Chart.yaml

      - name: Update version in Chart.yaml
        uses: mikefarah/yq@v4.6.0
        if: ${{ steps.prep.outputs.release_chart == 'true' }}
        with:
          cmd: yq eval '.version = "${{ steps.prep.outputs.version }}"' -i charts/captain-hook/Chart.yaml

      - name: Install Helm
        uses: azure/setup-helm@v1
        if: ${{ steps.prep.outputs.release_chart == 'true' }}
        with:
          version: v3.5.2
